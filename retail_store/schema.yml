openapi: 3.0.3
info:
  title: Billing Project API
  version: 1.0.0
  description: An application for on-line shop. Carts, buyers, partners
paths:
  /api-token-auth/:
    post:
      operationId: api_token_auth_create
      tags:
      - api-token-auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/cart/:
    get:
      operationId: api_v1_cart_retrieve
      description: A class for working with the user's shopping cart
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_cart_create
      description: A class for working with the user's shopping cart
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_cart_update
      description: A class for working with the user's shopping cart
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_cart_destroy
      description: A class for working with the user's shopping cart
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orders/:
    get:
      operationId: api_v1_orders_list
      description: Order ViewSet
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: api_v1_orders_create
      description: Order ViewSet
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/orders/{id}/:
    get:
      operationId: api_v1_orders_retrieve
      description: Order ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_v1_orders_update
      description: Order ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_v1_orders_partial_update
      description: Order ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_v1_orders_destroy
      description: Order ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/product/categories/:
    get:
      operationId: api_v1_product_categories_list
      description: Category ViewSet
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: api_v1_product_categories_create
      description: Category ViewSet
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/product/categories/{id}/:
    get:
      operationId: api_v1_product_categories_retrieve
      description: Category ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_v1_product_categories_update
      description: Category ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_v1_product_categories_partial_update
      description: Category ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_v1_product_categories_destroy
      description: Category ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/product/details/:
    get:
      operationId: api_v1_product_details_list
      description: ProductDetailViewSet
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductDetailList'
          description: ''
    post:
      operationId: api_v1_product_details_create
      description: ProductDetailViewSet
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductDetail'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
          description: ''
  /api/v1/product/details/{id}/:
    get:
      operationId: api_v1_product_details_retrieve
      description: ProductDetailViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product detail.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
          description: ''
    put:
      operationId: api_v1_product_details_update
      description: ProductDetailViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product detail.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductDetail'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
          description: ''
    patch:
      operationId: api_v1_product_details_partial_update
      description: ProductDetailViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product detail.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductDetail'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
          description: ''
    delete:
      operationId: api_v1_product_details_destroy
      description: ProductDetailViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product detail.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/product/parameter/:
    get:
      operationId: api_v1_product_parameter_list
      description: ProductParameterViewSet
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductParameterList'
          description: ''
    post:
      operationId: api_v1_product_parameter_create
      description: ProductParameterViewSet
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductParameter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductParameter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductParameter'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductParameter'
          description: ''
  /api/v1/product/parameter/{id}/:
    get:
      operationId: api_v1_product_parameter_retrieve
      description: ProductParameterViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product parameter value.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductParameter'
          description: ''
    put:
      operationId: api_v1_product_parameter_update
      description: ProductParameterViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product parameter value.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductParameter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductParameter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductParameter'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductParameter'
          description: ''
    patch:
      operationId: api_v1_product_parameter_partial_update
      description: ProductParameterViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product parameter value.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductParameter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductParameter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductParameter'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductParameter'
          description: ''
    delete:
      operationId: api_v1_product_parameter_destroy
      description: ProductParameterViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product parameter value.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/products/:
    get:
      operationId: api_v1_products_list
      description: Products ViewSet
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_v1_products_create
      description: Products ViewSet
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/products/{id}/:
    get:
      operationId: api_v1_products_retrieve
      description: Products ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_v1_products_update
      description: Products ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_v1_products_destroy
      description: Products ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/retail/shops/:
    get:
      operationId: api_v1_retail_shops_list
      description: View store information
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopList'
          description: ''
  /api/v1/users/contact/:
    get:
      operationId: api_v1_users_contact_list
      description: User detail information ViewSet
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContactList'
          description: ''
    post:
      operationId: api_v1_users_contact_create
      description: User detail information ViewSet
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
  /api/v1/users/contact/{id}/:
    get:
      operationId: api_v1_users_contact_retrieve
      description: User detail information ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Contact_info.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    put:
      operationId: api_v1_users_contact_update
      description: User detail information ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Contact_info.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    patch:
      operationId: api_v1_users_contact_partial_update
      description: User detail information ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Contact_info.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContact'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
    delete:
      operationId: api_v1_users_contact_destroy
      description: User detail information ViewSet
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Contact_info.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /partner/order/:
    get:
      operationId: partner_order_retrieve
      description: A class for receiving orders by suppliers
      tags:
      - partner
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /partner/state/:
    get:
      operationId: partner_state_retrieve
      description: A class for working with the supplier status
      tags:
      - partner
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: partner_state_create
      description: A class for working with the supplier status
      tags:
      - partner
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /partner/update/:
    post:
      operationId: partner_update_create
      description: Class for updating the price list from the supplier
      tags:
      - partner
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /user/detail/:
    get:
      operationId: user_detail_retrieve
      description: Class for working with user data
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: user_detail_create
      description: Class for working with user data
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /user/login/:
    post:
      operationId: user_login_create
      description: User authorization
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /user/register/:
    post:
      operationId: user_register_create
      description: Buyer registration class
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /user/register/confirm/:
    post:
      operationId: user_register_confirm_create
      description: Class for confirming the email address
      tags:
      - user
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          title: Имя пользователя
        password:
          type: string
          writeOnly: true
          title: Пароль
        token:
          type: string
          readOnly: true
          title: Токен
      required:
      - password
      - token
      - username
    Category:
      type: object
      description: Category serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
      required:
      - id
      - name
    Contact:
      type: object
      description: full information about the user serializer
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        country:
          type: string
          maxLength: 50
        city:
          type: string
          maxLength: 50
        street:
          type: string
          maxLength: 80
        house:
          type: integer
          maximum: 2147483647
          minimum: 1
        structure:
          type: string
          title: Struct
          maxLength: 10
        building:
          type: string
          maxLength: 10
        apartment:
          type: string
          nullable: true
          maxLength: 20
        phone:
          type: string
          title: Phone_number
          maxLength: 20
      required:
      - city
      - country
      - id
      - phone
      - street
      - user
    Order:
      type: object
      description: Order serializer
      properties:
        user:
          type: integer
        date:
          type: string
          format: date-time
          readOnly: true
          title: Created_at
        order_state:
          $ref: '#/components/schemas/OrderStateEnum'
      required:
      - date
      - user
    OrderStateEnum:
      enum:
      - NEW
      - CONFIRM
      - IN_PROGRESS
      - ASSEMBLED
      - SENT
      - DELIVERED
      - DONE
      - CANCELED
      type: string
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedContactList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
    PaginatedOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedProductDetailList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductDetail'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedProductParameterList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductParameter'
    PaginatedShopList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Shop'
    PatchedCategory:
      type: object
      description: Category serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
    PatchedContact:
      type: object
      description: full information about the user serializer
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        country:
          type: string
          maxLength: 50
        city:
          type: string
          maxLength: 50
        street:
          type: string
          maxLength: 80
        house:
          type: integer
          maximum: 2147483647
          minimum: 1
        structure:
          type: string
          title: Struct
          maxLength: 10
        building:
          type: string
          maxLength: 10
        apartment:
          type: string
          nullable: true
          maxLength: 20
        phone:
          type: string
          title: Phone_number
          maxLength: 20
    PatchedOrder:
      type: object
      description: Order serializer
      properties:
        user:
          type: integer
        date:
          type: string
          format: date-time
          readOnly: true
          title: Created_at
        order_state:
          $ref: '#/components/schemas/OrderStateEnum'
    PatchedProductDetail:
      type: object
      description: Product information serializer
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        shop:
          type: integer
        description:
          type: string
          nullable: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 1
        price:
          type: string
          format: decimal
          pattern: ^\d{0,7}(?:\.\d{0,2})?$
        price_retail:
          type: string
          format: decimal
          pattern: ^\d{0,7}(?:\.\d{0,2})?$
          title: Retail_price
    PatchedProductParameter:
      type: object
      description: ProductParameter serializer
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
          title: Product_parameter_value
          maxLength: 150
        product_info:
          type: integer
        parameter:
          type: integer
    Product:
      type: object
      description: Products serializer
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        category:
          type: integer
      required:
      - category
      - id
      - name
    ProductDetail:
      type: object
      description: Product information serializer
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        shop:
          type: integer
        description:
          type: string
          nullable: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 1
        price:
          type: string
          format: decimal
          pattern: ^\d{0,7}(?:\.\d{0,2})?$
        price_retail:
          type: string
          format: decimal
          pattern: ^\d{0,7}(?:\.\d{0,2})?$
          title: Retail_price
      required:
      - id
      - price
      - price_retail
      - product
      - shop
    ProductParameter:
      type: object
      description: ProductParameter serializer
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
          title: Product_parameter_value
          maxLength: 150
        product_info:
          type: integer
        parameter:
          type: integer
      required:
      - id
      - value
    Shop:
      type: object
      description: Shop serializer
      properties:
        name:
          type: string
        url:
          type: string
          format: uri
        manager:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
      required:
      - manager
      - name
      - url
    User:
      type: object
      description: User contact information serializer
      properties:
        username:
          type: string
          nullable: true
          pattern: ^[\w.@+-]+$
          maxLength: 100
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        email:
          type: string
          format: email
          title: Адрес электронной почты
          maxLength: 254
      required:
      - email
    UserTypeEnum:
      enum:
      - BUYER
      - SHOP_MANAGER
      type: string
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
